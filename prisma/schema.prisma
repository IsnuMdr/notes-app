generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes       Note[]
  comments    Comment[]
  sharedNotes NoteShare[]

  @@map("users")
}

model Note {
  id        String   @id @default(uuid())
  title     String
  content   String
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  comments Comment[]
  shares   NoteShare[]

  @@map("notes")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  noteId String
  note   Note   @relation(fields: [noteId], references: [id], onDelete: Cascade)

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model NoteShare {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  noteId String
  note   Note   @relation(fields: [noteId], references: [id], onDelete: Cascade)

  sharedWithId String
  sharedWith   User   @relation(fields: [sharedWithId], references: [id], onDelete: Cascade)

  @@unique([noteId, sharedWithId])
  @@map("note_shares")
}
